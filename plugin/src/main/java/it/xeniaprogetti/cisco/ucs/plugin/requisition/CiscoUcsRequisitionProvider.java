package it.xeniaprogetti.cisco.ucs.plugin.requisition;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.dataformat.xml.XmlMapper;
import it.xeniaprogetti.cisco.ucs.plugin.client.ClientManager;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.ApiClientService;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.ApiException;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.UcsComputeBlade;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.UcsComputeRackUnit;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.UcsEquipmentChassis;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.UcsEquipmentFex;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.UcsEquipmentRackEnclosure;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.UcsIpPoolPooled;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.UcsNetworkElement;
import it.xeniaprogetti.cisco.ucs.plugin.client.api.Utils;
import it.xeniaprogetti.cisco.ucs.plugin.connection.ConnectionManager;
import org.opennms.integration.api.v1.config.requisition.Requisition;
import org.opennms.integration.api.v1.config.requisition.RequisitionInterface;
import org.opennms.integration.api.v1.config.requisition.RequisitionNode;
import org.opennms.integration.api.v1.config.requisition.SnmpPrimaryType;
import org.opennms.integration.api.v1.config.requisition.immutables.ImmutableRequisition;
import org.opennms.integration.api.v1.config.requisition.immutables.ImmutableRequisitionInterface;
import org.opennms.integration.api.v1.config.requisition.immutables.ImmutableRequisitionMetaData;
import org.opennms.integration.api.v1.config.requisition.immutables.ImmutableRequisitionNode;
import org.opennms.integration.api.v1.dao.NodeDao;
import org.opennms.integration.api.v1.requisition.RequisitionProvider;
import org.opennms.integration.api.v1.requisition.RequisitionRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CiscoUcsRequisitionProvider implements RequisitionProvider {

    private final NodeDao nodeDao;
    private final ConnectionManager connectionManager;
    private final ClientManager clientManager;
    public final static String TYPE = "ucs";

    private static final Logger LOG = LoggerFactory.getLogger( CiscoUcsRequisitionProvider.class);

    public static final String CISCO_UCS_METADATA_CONTEXT = "cisco-ucs";

    public static final String PARAMETER_FOREIGN_SOURCE = "foreignSource";

    public final static String PARAMETER_ALIAS="alias";
    public final static String PARAMETER_LOCATION="location";
    public final static String PARAMETER_IMPORT_NETWORK_ELEMENT="importNetworkElement";
    public final static String PARAMETER_IMPORT_COMPUTE_BLADE="importComputeBlade";
    public final static String PARAMETER_IMPORT_COMPUTE_RACK_UNIT ="importComputeRackUnit";
    public final static String PARAMETER_IMPORT_EQUIPMENT_CHASSIS="importEquipmentChassis";
    public final static String PARAMETER_IMPORT_EQUIPMENT_FEX="importEquipmentFex";
    public final static String PARAMETER_IMPORT_EQUIPMENT_RACK_ENCLOSURE="importEquipmentRackEnclosure";


    public CiscoUcsRequisitionProvider(final NodeDao nodeDao, final ConnectionManager connectionManager, final ClientManager clientManager) {
        this.nodeDao = Objects.requireNonNull(nodeDao);
        this.connectionManager = Objects.requireNonNull(connectionManager);
        this.clientManager = Objects.requireNonNull(clientManager);
    }

    @Override
    public String getType() {
        return TYPE;
    }

    @Override
    public final RequisitionRequest getRequest(final Map<String, String> parameters) {
        final var alias = Objects.requireNonNull(parameters.get(PARAMETER_ALIAS), "Missing requisition parameter: alias");
        final var location = Objects.requireNonNullElse(parameters.get(PARAMETER_LOCATION), nodeDao.getDefaultLocationName());

        final var request = new Request(alias,location);

        if (parameters.containsKey(PARAMETER_FOREIGN_SOURCE)) {
            request.foreignSource=parameters.get(PARAMETER_FOREIGN_SOURCE);
        }

        if (parameters.containsKey(PARAMETER_IMPORT_NETWORK_ELEMENT)) {
            request.importNetworkElement=Boolean.parseBoolean(parameters.get(PARAMETER_IMPORT_NETWORK_ELEMENT));
        }

        if (parameters.containsKey(PARAMETER_IMPORT_COMPUTE_BLADE)) {
            request.importComputeBlade=Boolean.parseBoolean(parameters.get(PARAMETER_IMPORT_COMPUTE_BLADE));
        }

        if (parameters.containsKey(PARAMETER_IMPORT_COMPUTE_RACK_UNIT)) {
            request.importComputeRackUnit=Boolean.parseBoolean(parameters.get(PARAMETER_IMPORT_COMPUTE_RACK_UNIT));
        }

        if (parameters.containsKey(PARAMETER_IMPORT_EQUIPMENT_CHASSIS)) {
            request.importEquipmentChassis = Boolean.parseBoolean(parameters.get(PARAMETER_IMPORT_EQUIPMENT_CHASSIS));
        }

        if (parameters.containsKey(PARAMETER_IMPORT_EQUIPMENT_FEX)) {
            request.importEquipmentFex = Boolean.parseBoolean(parameters.get(PARAMETER_IMPORT_EQUIPMENT_FEX));
        }

        if (parameters.containsKey(PARAMETER_IMPORT_EQUIPMENT_RACK_ENCLOSURE)) {
            request.importEquipmentRackEnclosure = Boolean.parseBoolean(parameters.get(PARAMETER_IMPORT_EQUIPMENT_RACK_ENCLOSURE));
        }
        return request;
    }

    @Override
    public final Requisition getRequisition(final RequisitionRequest rawRequest) {
        final var request = (Request) rawRequest;
        try {
            return handleRequest(new RequestContext(request));
        } catch (ApiException e) {
            LOG.error("getRequisition: Cisco UCS Manager communication failed", e);
            throw new RuntimeException("Cisco UCS Manager prism communication failed", e);
        }
    }


    protected Requisition handleRequest(final RequestContext context) throws ApiException {
        var request = (Request) context.getRequest();

        final var requisition = ImmutableRequisition.newBuilder()
                .setForeignSource(context.request.foreignSource);

        ApiClientService service = context.client();

        Map<String, List<UcsIpPoolPooled>> dnToIpListMap =  new HashMap<>();
        for (UcsIpPoolPooled ucsIpPoolPooled: service.findUcsIpPoolPooled()) {
            if (!dnToIpListMap.containsKey(ucsIpPoolPooled.assignedToDeviceDn)) {
                dnToIpListMap.put(ucsIpPoolPooled.assignedToDeviceDn, new ArrayList<>());
            }
            dnToIpListMap.get(ucsIpPoolPooled.assignedToDeviceDn).add(ucsIpPoolPooled);
        }

        if (request.importNetworkElement) {
            service.getUcsNetworkElementList()
                .forEach(element -> requisition.addNode(from(element, context, dnToIpListMap.get(element.dn))));
        }

        if (request.importComputeBlade) {
            service.getUcsComputeBladeList()
                    .forEach(element -> requisition.addNode(from(element, context, dnToIpListMap.get(element.dn))));
        }

        if (request.importComputeRackUnit) {
            service.getUcsComputeRackUnitList()
                    .forEach(element -> requisition.addNode(from(element, context, dnToIpListMap.get(element.dn))));
        }

        if (request.importEquipmentChassis) {
            service.getUcsEquipmentChassisList()
                    .forEach(element -> requisition.addNode(from(element, context, dnToIpListMap.get(element.dn))));
        }

        if (request.importEquipmentFex) {
            service.getUcsEquipmentFexList()
                    .forEach(element -> requisition.addNode(from(element, context, dnToIpListMap.get(element.dn))));
        }

        if (request.importEquipmentRackEnclosure) {
            service.getUcsEquipmentRackEnclosureList()
                    .forEach(element -> requisition.addNode(from(element, context, dnToIpListMap.get(element.dn))));
        }

        return requisition.build();
    }

    private RequisitionInterface fromNoInterface() {
        final var ucsIpPoolPooledIf = ImmutableRequisitionInterface.newBuilder()
                .setIpAddress(Objects.requireNonNull(Utils.getValidInetAddress("0.0.0.0")))
                .setDescription("NoUcsIpPoolPooledFound")
                .setSnmpPrimary(SnmpPrimaryType.NOT_ELIGIBLE)
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("UcsIpPoolPooledFound")
                        .setValue("No Ip InterfaceFound on UCS")
                        .build())
                .addMonitoredService("CiscoUcsEntity");
        return ucsIpPoolPooledIf.build();
    }


    private RequisitionInterface from(UcsIpPoolPooled ucsIpPoolPooled) {
        final var ucsIpPoolPooledIf = ImmutableRequisitionInterface.newBuilder()
                .setIpAddress(Objects.requireNonNull(Utils.getValidInetAddress(ucsIpPoolPooled.addr)))
                .setDescription("UcsIpPoolPooled")
                .setSnmpPrimary(SnmpPrimaryType.NOT_ELIGIBLE)
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assignedToDeviceDn")
                        .setValue(ucsIpPoolPooled.assignedToDeviceDn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assignedToProfileDn")
                        .setValue(ucsIpPoolPooled.assignedToProfileDn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("poolDn")
                        .setValue(ucsIpPoolPooled.poolDn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("defGw")
                        .setValue(ucsIpPoolPooled.defGw)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("subnet")
                        .setValue(ucsIpPoolPooled.subnet)
                        .build())
                .addMonitoredService("CiscoUcsEntity");


        return ucsIpPoolPooledIf.build();
    }

    private RequisitionNode from(UcsNetworkElement ucsElement, RequestContext context, List<UcsIpPoolPooled> ipPoolPooledList) {
        final var node = ImmutableRequisitionNode.newBuilder()
                .setForeignId(ucsElement.dn.replace("/","-"))
                .setLocation(context.getLocation())
                .setNodeLabel("FabricInterconnectSwitch-"+ucsElement.id)
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("dn")
                        .setValue(ucsElement.dn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("alias")
                        .setValue(context.getAlias())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("type")
                        .setValue(ucsElement.classId.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("item")
                        .setValue(ucsElement.classItem.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminEvacState")
                        .setValue(ucsElement.adminEvacState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminInbandIfState")
                        .setValue(ucsElement.adminInbandIfState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("diffMemory")
                        .setValue(String.valueOf(ucsElement.diffMemory))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("expectedMemory")
                        .setValue(String.valueOf(ucsElement.expectedMemory))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fltAggr")
                        .setValue(String.valueOf(ucsElement.fltAggr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("forceEvac")
                        .setValue(ucsElement.forceEvac)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("id")
                        .setValue(ucsElement.id)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("inventoryStatus")
                        .setValue(ucsElement.inventoryStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("minActiveFan")
                        .setValue(String.valueOf(ucsElement.minActiveFan))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("model")
                        .setValue(ucsElement.model)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operEvacState")
                        .setValue(ucsElement.operEvacState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operability")
                        .setValue(ucsElement.operability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("revision")
                        .setValue(String.valueOf(ucsElement.revision))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serial")
                        .setValue(ucsElement.serial)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("shutdownFanRemoveal")
                        .setValue(ucsElement.shutdownFanRemoveal)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("thermal")
                        .setValue(ucsElement.thermal)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("totalMemory")
                        .setValue(String.valueOf(ucsElement.totalMemory))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vendor")
                        .setValue(ucsElement.vendor)
                        .build());
        final var oobIf = ImmutableRequisitionInterface.newBuilder()
                .setIpAddress(Objects.requireNonNull(Utils.getValidInetAddress(ucsElement.oobIfIp)))
                .setDescription("oobIfIp")
                .setSnmpPrimary(SnmpPrimaryType.PRIMARY)
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("oobIfGw")
                        .setValue(ucsElement.oobIfGw)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("oobIfIp")
                        .setValue(ucsElement.oobIfIp)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("oobIfMac")
                        .setValue(ucsElement.oobIfMac)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("oobIfMask")
                        .setValue(ucsElement.oobIfMask)
                        .build())
                .addMonitoredService("CiscoUcsEntity");
        node.addInterface(oobIf.build());

        final var inBandIf = ImmutableRequisitionInterface.newBuilder()
                .setIpAddress(Objects.requireNonNull(Utils.getValidInetAddress(ucsElement.inbandIfIp)))
                .setDescription("inbandIfIp")
                .setSnmpPrimary(SnmpPrimaryType.NOT_ELIGIBLE)
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("inbandIfGw")
                        .setValue(ucsElement.inbandIfGw)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("inbandIfIp")
                        .setValue(ucsElement.inbandIfIp)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("inbandIfMask")
                        .setValue(ucsElement.inbandIfMask)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("inbandIfVnet")
                        .setValue(String.valueOf(ucsElement.inbandIfVnet))
                        .build())
                .addMonitoredService("CiscoUcsEntity");
        node.addInterface(inBandIf.build());

        if (ipPoolPooledList != null && !ipPoolPooledList.isEmpty()) {
            for (UcsIpPoolPooled ucsIpPoolPooled: ipPoolPooledList) {
                node.addInterface(from(ucsIpPoolPooled));
            }
        }

        return node.build();
    }

    private RequisitionNode from(UcsComputeBlade ucsElement, RequestContext context, List<UcsIpPoolPooled> ipPoolPooledList) {
        final var node = ImmutableRequisitionNode.newBuilder()
                .setForeignId(ucsElement.dn.replace("/","-"))
                .setLocation(context.getLocation())
                .setNodeLabel(ucsElement.dn.replace("sys/","").replace("/","-"))
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("dn")
                        .setValue(ucsElement.dn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("alias")
                        .setValue(context.getAlias())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("type")
                        .setValue(ucsElement.classId.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("item")
                        .setValue(ucsElement.classItem.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminPower")
                        .setValue(ucsElement.adminPower)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminState")
                        .setValue(ucsElement.adminState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assetTag")
                        .setValue(ucsElement.assetTag)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assignedToDn")
                        .setValue(ucsElement.assignedToDn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("association")
                        .setValue(ucsElement.association)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("availability")
                        .setValue(ucsElement.availability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("availableMemory")
                        .setValue(String.valueOf(ucsElement.availableMemory))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("chassisId")
                        .setValue(String.valueOf(ucsElement.chassisId))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("checkPoint")
                        .setValue(ucsElement.checkPoint)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("connPath")
                        .setValue(ucsElement.connPath)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("connStatus")
                        .setValue(ucsElement.connStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("descr")
                        .setValue(ucsElement.descr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("discovery")
                        .setValue(ucsElement.discovery)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("discoveryStatus")
                        .setValue(ucsElement.discoveryStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fltAggr")
                        .setValue(String.valueOf(ucsElement.fltAggr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmDescr")
                        .setValue(ucsElement.fsmDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmFlags")
                        .setValue(ucsElement.fsmFlags)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmPrev")
                        .setValue(ucsElement.fsmPrev)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmProgr")
                        .setValue(String.valueOf(ucsElement.fsmProgr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrCode")
                        .setValue(ucsElement.fsmRmtInvErrCode)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrDescr")
                        .setValue(ucsElement.fsmRmtInvErrDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvRslt")
                        .setValue(ucsElement.fsmRmtInvRslt)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStageDescr")
                        .setValue(ucsElement.fsmStageDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStamp")
                        .setValue(String.valueOf(ucsElement.fsmStamp))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStatus")
                        .setValue(ucsElement.fsmStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmTry")
                        .setValue(String.valueOf(ucsElement.fsmTry))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("intId")
                        .setValue(String.valueOf(ucsElement.intId))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("kmipFault")
                        .setValue(ucsElement.kmipFault)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("kmipFaultDescription")
                        .setValue(ucsElement.kmipFaultDescription)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("lc")
                        .setValue(ucsElement.lc)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("lcTs")
                        .setValue(String.valueOf(ucsElement.lcTs))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("localId")
                        .setValue(ucsElement.localId)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("lowVoltageMemory")
                        .setValue(ucsElement.lowVoltageMemory)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("managingInst")
                        .setValue(ucsElement.managingInst)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("memorySpeed")
                        .setValue(ucsElement.memorySpeed)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("mfgTime")
                        .setValue(ucsElement.mfgTime)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("model")
                        .setValue(ucsElement.model)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("name")
                        .setValue(ucsElement.name)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOf40GAdaptorsWithOldFw")
                        .setValue(String.valueOf(ucsElement.numOf40GAdaptorsWithOldFw))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOf40GAdaptorsWithUnknownFw")
                        .setValue(String.valueOf(ucsElement.numOf40GAdaptorsWithUnknownFw))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfAdaptors")
                        .setValue(String.valueOf(ucsElement.numOfAdaptors))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfCores")
                        .setValue(String.valueOf(ucsElement.numOfCores))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfCoresEnabled")
                        .setValue(String.valueOf(ucsElement.numOfCoresEnabled))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfCpus")
                        .setValue(String.valueOf(ucsElement.numOfCpus))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfEthHostIfs")
                        .setValue(String.valueOf(ucsElement.numOfEthHostIfs))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfFcHostIfs")
                        .setValue(String.valueOf(ucsElement.numOfFcHostIfs))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfThreads")
                        .setValue(String.valueOf(ucsElement.numOfThreads))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operPower")
                        .setValue(ucsElement.operPower)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operPwrTransSrc")
                        .setValue(ucsElement.operPwrTransSrc)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifier")
                        .setValue(ucsElement.operQualifier)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifierReason")
                        .setValue(ucsElement.operQualifierReason)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operState")
                        .setValue(ucsElement.operState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operability")
                        .setValue(ucsElement.operability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("originalUuid")
                        .setValue(ucsElement.originalUuid)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("partNumber")
                        .setValue(ucsElement.partNumber)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("policyLevel")
                        .setValue(String.valueOf(ucsElement.policyLevel))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("policyOwner")
                        .setValue(ucsElement.policyOwner)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("presence")
                        .setValue(ucsElement.presence)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("revision")
                        .setValue(String.valueOf(ucsElement.revision))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("scaledMode")
                        .setValue(ucsElement.scaledMode)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serial")
                        .setValue(ucsElement.serial)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serverId")
                        .setValue(ucsElement.serverId)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("slotId")
                        .setValue(String.valueOf(ucsElement.slotId))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("storageOperQualifier")
                        .setValue(ucsElement.storageOperQualifier)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("totalMemory")
                        .setValue(String.valueOf(ucsElement.totalMemory))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("usrLbl")
                        .setValue(ucsElement.usrLbl)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("uuid")
                        .setValue(ucsElement.uuid)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vendor")
                        .setValue(ucsElement.vendor)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vid")
                        .setValue(ucsElement.vid)
                        .build())
                ;

        if (ipPoolPooledList != null && !ipPoolPooledList.isEmpty()) {
            for (UcsIpPoolPooled ucsIpPoolPooled: ipPoolPooledList) {
                node.addInterface(from(ucsIpPoolPooled));
            }
        } else {
            node.addInterface(fromNoInterface());
        }

        return node.build();
    }

    private RequisitionNode from(UcsComputeRackUnit ucsElement, RequestContext context, List<UcsIpPoolPooled> ipPoolPooledList) {
        final var node = ImmutableRequisitionNode.newBuilder()
                .setForeignId(ucsElement.dn.replace("/","-"))
                .setLocation(context.getLocation())
                .setNodeLabel(ucsElement.dn.replace("sys/","").replace("/","-"))
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("dn")
                        .setValue(ucsElement.dn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("alias")
                        .setValue(context.getAlias())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("type")
                        .setValue(ucsElement.classId.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("item")
                        .setValue(ucsElement.classItem.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminPower")
                        .setValue(ucsElement.adminPower)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminState")
                        .setValue(ucsElement.adminState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assetTag")
                        .setValue(ucsElement.assetTag)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assignedToDn")
                        .setValue(ucsElement.assignedToDn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("association")
                        .setValue(ucsElement.association)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("availability")
                        .setValue(ucsElement.availability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("availableMemory")
                        .setValue(String.valueOf(ucsElement.availableMemory))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("checkPoint")
                        .setValue(ucsElement.checkPoint)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("connPath")
                        .setValue(ucsElement.connPath)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("connStatus")
                        .setValue(ucsElement.connStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("descr")
                        .setValue(ucsElement.descr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("discovery")
                        .setValue(ucsElement.discovery)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("discoveryStatus")
                        .setValue(ucsElement.discoveryStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("enclosureId")
                        .setValue(String.valueOf(ucsElement.enclosureId))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fanSpeedConfigStatus")
                        .setValue(ucsElement.fanSpeedConfigStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fanSpeedPolicyFault")
                        .setValue(ucsElement.fanSpeedPolicyFault)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fltAggr")
                        .setValue(String.valueOf(ucsElement.fltAggr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmDescr")
                        .setValue(ucsElement.fsmDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmFlags")
                        .setValue(ucsElement.fsmFlags)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmPrev")
                        .setValue(ucsElement.fsmPrev)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmProgr")
                        .setValue(String.valueOf(ucsElement.fsmProgr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrCode")
                        .setValue(ucsElement.fsmRmtInvErrCode)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrDescr")
                        .setValue(ucsElement.fsmRmtInvErrDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvRslt")
                        .setValue(ucsElement.fsmRmtInvRslt)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStageDescr")
                        .setValue(ucsElement.fsmStageDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStamp")
                        .setValue(String.valueOf(ucsElement.fsmStamp))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStatus")
                        .setValue(ucsElement.fsmStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmTry")
                        .setValue(String.valueOf(ucsElement.fsmTry))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("id")
                        .setValue(String.valueOf(ucsElement.id))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("intId")
                        .setValue(String.valueOf(ucsElement.intId))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("kmipFault")
                        .setValue(ucsElement.kmipFault)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("kmipFaultDescription")
                        .setValue(ucsElement.kmipFaultDescription)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("lc")
                        .setValue(ucsElement.lc)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("lcTs")
                        .setValue(String.valueOf(ucsElement.lcTs))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("localId")
                        .setValue(ucsElement.localId)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("lowVoltageMemory")
                        .setValue(ucsElement.lowVoltageMemory)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("managingInst")
                        .setValue(ucsElement.managingInst)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("memorySpeed")
                        .setValue(ucsElement.memorySpeed)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("mfgTime")
                        .setValue(ucsElement.mfgTime)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("model")
                        .setValue(ucsElement.model)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("name")
                        .setValue(ucsElement.name)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOf40GAdaptorsWithOldFw")
                        .setValue(String.valueOf(ucsElement.numOf40GAdaptorsWithOldFw))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOf40GAdaptorsWithUnknownFw")
                        .setValue(String.valueOf(ucsElement.numOf40GAdaptorsWithUnknownFw))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfAdaptors")
                        .setValue(String.valueOf(ucsElement.numOfAdaptors))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfCores")
                        .setValue(String.valueOf(ucsElement.numOfCores))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfCoresEnabled")
                        .setValue(String.valueOf(ucsElement.numOfCoresEnabled))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfCpus")
                        .setValue(String.valueOf(ucsElement.numOfCpus))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfEthHostIfs")
                        .setValue(String.valueOf(ucsElement.numOfEthHostIfs))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfFcHostIfs")
                        .setValue(String.valueOf(ucsElement.numOfFcHostIfs))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("numOfThreads")
                        .setValue(String.valueOf(ucsElement.numOfThreads))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operPower")
                        .setValue(ucsElement.operPower)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operPwrTransSrc")
                        .setValue(ucsElement.operPwrTransSrc)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifier")
                        .setValue(ucsElement.operQualifier)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifierReason")
                        .setValue(ucsElement.operQualifierReason)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operState")
                        .setValue(ucsElement.operState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operability")
                        .setValue(ucsElement.operability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("originalUuid")
                        .setValue(ucsElement.originalUuid)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("partNumber")
                        .setValue(ucsElement.partNumber)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("physicalSecurity")
                        .setValue(ucsElement.physicalSecurity)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("policyLevel")
                        .setValue(String.valueOf(ucsElement.policyLevel))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("policyOwner")
                        .setValue(ucsElement.policyOwner)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("presence")
                        .setValue(ucsElement.presence)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("revision")
                        .setValue(String.valueOf(ucsElement.revision))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serial")
                        .setValue(ucsElement.serial)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serverId")
                        .setValue(String.valueOf(ucsElement.serverId))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("slotId")
                        .setValue(String.valueOf(ucsElement.slotId))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("storageOperQualifier")
                        .setValue(ucsElement.storageOperQualifier)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("totalMemory")
                        .setValue(String.valueOf(ucsElement.totalMemory))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("usrLbl")
                        .setValue(ucsElement.usrLbl)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("uuid")
                        .setValue(ucsElement.uuid)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vendor")
                        .setValue(ucsElement.vendor)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("versionHolder")
                        .setValue(ucsElement.versionHolder)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vethStatus")
                        .setValue(ucsElement.vethStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vid")
                        .setValue(String.valueOf(ucsElement.vid))
                        .build())
                ;

        if (ipPoolPooledList != null && !ipPoolPooledList.isEmpty()) {
            for (UcsIpPoolPooled ucsIpPoolPooled: ipPoolPooledList) {
                node.addInterface(from(ucsIpPoolPooled));
            }
        } else {
            node.addInterface(fromNoInterface());
        }
        return node.build();
    }

    private RequisitionNode from(UcsEquipmentChassis ucsElement, RequestContext context, List<UcsIpPoolPooled> ipPoolPooledList) {
        final var node = ImmutableRequisitionNode.newBuilder()
                .setForeignId(ucsElement.dn.replace("/","-"))
                .setLocation(context.getLocation())
                .setNodeLabel(ucsElement.dn.replace("sys/","").replace("/","-"))
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("dn")
                        .setValue(ucsElement.dn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("alias")
                        .setValue(context.getAlias())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("type")
                        .setValue(ucsElement.classId.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("item")
                        .setValue(ucsElement.classItem.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("ackProgressIndicator")
                        .setValue(ucsElement.ackProgressIndicator)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminState")
                        .setValue(ucsElement.adminState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assetTag")
                        .setValue(ucsElement.assetTag)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assignedToDn")
                        .setValue(ucsElement.assignedToDn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("association")
                        .setValue(ucsElement.association)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("availability")
                        .setValue(ucsElement.availability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("configState")
                        .setValue(ucsElement.configState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("connPath")
                        .setValue(ucsElement.connPath)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("connStatus")
                        .setValue(ucsElement.connStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("discovery")
                        .setValue(ucsElement.discovery)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("discoveryStatus")
                        .setValue(ucsElement.discoveryStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fabricEpDn")
                        .setValue(ucsElement.fabricEpDn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fanSpeedConfigState")
                        .setValue(ucsElement.fanSpeedConfigState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fltAggr")
                        .setValue(String.valueOf(ucsElement.fltAggr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmDescr")
                        .setValue(ucsElement.fsmDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmFlags")
                        .setValue(ucsElement.fsmFlags)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmPrev")
                        .setValue(ucsElement.fsmPrev)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmProgr")
                        .setValue(String.valueOf(ucsElement.fsmProgr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrCode")
                        .setValue(ucsElement.fsmRmtInvErrCode)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrDescr")
                        .setValue(ucsElement.fsmRmtInvErrDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvRslt")
                        .setValue(ucsElement.fsmRmtInvRslt)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStageDescr")
                        .setValue(ucsElement.fsmStageDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStamp")
                        .setValue(String.valueOf(ucsElement.fsmStamp))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStatus")
                        .setValue(ucsElement.fsmStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmTry")
                        .setValue(String.valueOf(ucsElement.fsmTry))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("id")
                        .setValue(String.valueOf(ucsElement.id))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("lcTs")
                        .setValue(String.valueOf(ucsElement.lcTs))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("licGP")
                        .setValue(String.valueOf(ucsElement.licGP))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("licState")
                        .setValue(ucsElement.licState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("managingInst")
                        .setValue(ucsElement.managingInst)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("mfgTime")
                        .setValue(ucsElement.mfgTime)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("model")
                        .setValue(ucsElement.model)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifier")
                        .setValue(ucsElement.operQualifier)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifierReason")
                        .setValue(ucsElement.operQualifierReason)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operState")
                        .setValue(ucsElement.operState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operability")
                        .setValue(ucsElement.operability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("partNumber")
                        .setValue(ucsElement.partNumber)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("power")
                        .setValue(ucsElement.power)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("presence")
                        .setValue(ucsElement.presence)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("revision")
                        .setValue(String.valueOf(ucsElement.revision))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("seepromOperState")
                        .setValue(ucsElement.seepromOperState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serial")
                        .setValue(ucsElement.serial)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serviceState")
                        .setValue(ucsElement.serviceState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("thermal")
                        .setValue(ucsElement.thermal)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("thermalStateQualifier")
                        .setValue(ucsElement.thermalStateQualifier)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("usrLbl")
                        .setValue(ucsElement.usrLbl)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vendor")
                        .setValue(ucsElement.vendor)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("versionHolder")
                        .setValue(ucsElement.versionHolder)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vid")
                        .setValue(ucsElement.vid)
                        .build());

        if (ipPoolPooledList != null && !ipPoolPooledList.isEmpty()) {
            for (UcsIpPoolPooled ucsIpPoolPooled: ipPoolPooledList) {
                node.addInterface(from(ucsIpPoolPooled));
            }
        } else {
            node.addInterface(fromNoInterface());
        }

        return node.build();
    }

    private RequisitionNode from(UcsEquipmentFex ucsElement, RequestContext context, List<UcsIpPoolPooled> ipPoolPooledList) {
        final var node = ImmutableRequisitionNode.newBuilder()
                .setForeignId(ucsElement.dn.replace("/","-"))
                .setLocation(context.getLocation())
                .setNodeLabel(ucsElement.dn.replace("sys/","").replace("/","-"))
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("dn")
                        .setValue(ucsElement.dn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("alias")
                        .setValue(context.getAlias())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("type")
                        .setValue(ucsElement.classId.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("item")
                        .setValue(ucsElement.classItem.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminPowerState")
                        .setValue(ucsElement.adminPowerState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("adminState")
                        .setValue(ucsElement.adminState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("configState")
                        .setValue(ucsElement.configState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fltAggr")
                        .setValue(String.valueOf(ucsElement.fltAggr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmDescr")
                        .setValue(ucsElement.fsmDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmPrev")
                        .setValue(ucsElement.fsmPrev)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmProgr")
                        .setValue(String.valueOf(ucsElement.fsmProgr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrCode")
                        .setValue(ucsElement.fsmRmtInvErrCode)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvErrDescr")
                        .setValue(ucsElement.fsmRmtInvErrDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmRmtInvRslt")
                        .setValue(ucsElement.fsmRmtInvRslt)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStageDescr")
                        .setValue(ucsElement.fsmStageDescr)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStamp")
                        .setValue(ucsElement.fsmStamp)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmStatus")
                        .setValue(ucsElement.fsmStatus)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fsmTry")
                        .setValue(String.valueOf(ucsElement.fsmTry))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("id")
                        .setValue(String.valueOf(ucsElement.id))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("licGP")
                        .setValue(String.valueOf(ucsElement.licGP))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("licState")
                        .setValue(ucsElement.licState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("model")
                        .setValue(ucsElement.model)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifier")
                        .setValue(ucsElement.operQualifier)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifierReason")
                        .setValue(ucsElement.operQualifierReason)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operState")
                        .setValue(ucsElement.operState)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operability")
                        .setValue(ucsElement.operability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("power")
                        .setValue(ucsElement.power)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("presence")
                        .setValue(ucsElement.presence)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("revision")
                        .setValue(String.valueOf(ucsElement.revision))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serial")
                        .setValue(ucsElement.serial)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("switchId")
                        .setValue(ucsElement.switchId)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("thermal")
                        .setValue(ucsElement.thermal)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("usrLbl")
                        .setValue(ucsElement.usrLbl)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vendor")
                        .setValue(ucsElement.vendor)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("voltage")
                        .setValue(ucsElement.voltage)
                        .build());

        if (ipPoolPooledList != null && !ipPoolPooledList.isEmpty()) {
            for (UcsIpPoolPooled ucsIpPoolPooled: ipPoolPooledList) {
                node.addInterface(from(ucsIpPoolPooled));
            }
        } else {
            node.addInterface(fromNoInterface());
        }

        return node.build();
    }

    private RequisitionNode from(UcsEquipmentRackEnclosure ucsElement, RequestContext context, List<UcsIpPoolPooled> ipPoolPooledList) {
        final var node = ImmutableRequisitionNode.newBuilder()
                .setForeignId(ucsElement.dn.replace("/","-"))
                .setLocation(context.getLocation())
                .setNodeLabel(ucsElement.dn.replace("sys/","").replace("/","-"))
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("dn")
                        .setValue(ucsElement.dn)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("alias")
                        .setValue(context.getAlias())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("type")
                        .setValue(ucsElement.classId.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("item")
                        .setValue(ucsElement.classItem.name())
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("assetTag")
                        .setValue(ucsElement.assetTag)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("fltAggr")
                        .setValue(String.valueOf(ucsElement.fltAggr))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("id")
                        .setValue(String.valueOf(ucsElement.id))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("mfgTime")
                        .setValue(ucsElement.mfgTime)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("model")
                        .setValue(ucsElement.model)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operQualifierReason")
                        .setValue(ucsElement.operQualifierReason)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("operability")
                        .setValue(ucsElement.operability)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("partNumber")
                        .setValue(ucsElement.partNumber)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("presence")
                        .setValue(ucsElement.presence)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("revision")
                        .setValue(String.valueOf(ucsElement.revision))
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("serial")
                        .setValue(ucsElement.serial)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vendor")
                        .setValue(ucsElement.vendor)
                        .build())
                .addMetaData(ImmutableRequisitionMetaData.newBuilder()
                        .setContext(CISCO_UCS_METADATA_CONTEXT)
                        .setKey("vid")
                        .setValue(String.valueOf(ucsElement.vid))
                        .build());

        if (ipPoolPooledList != null && !ipPoolPooledList.isEmpty()) {
            for (UcsIpPoolPooled ucsIpPoolPooled: ipPoolPooledList) {
                node.addInterface(from(ucsIpPoolPooled));
            }
        } else {
            node.addInterface(fromNoInterface());
        }

        return node.build();
    }

    public static class Request implements RequisitionRequest {

        private final String alias;
        private final String location;

        private String foreignSource;
        private boolean importNetworkElement = true;
        private boolean importComputeBlade = true;
        private boolean importComputeRackUnit = true;
        private boolean importEquipmentChassis = true;
        private boolean importEquipmentFex = true;
        private boolean importEquipmentRackEnclosure = true;


        public Request(String alias, String location) {
            this.alias = Objects.requireNonNull(alias);
            this.location = Objects.requireNonNull(location);
            this.foreignSource = String.format("%s-%s", TYPE, alias);
        }
    }

    public class RequestContext {
        private final Request request;

        public RequestContext(final Request request) {
            this.request = Objects.requireNonNull(request);
        }

        public ApiClientService client() throws ApiException {
            var connection =  connectionManager.getConnection(request.alias);
            if (connection.isEmpty()) {
                throw new ApiException("No connection for alias", new NullPointerException("No connection found for "+ request.alias));
            }
           LOG.info("client: requesting Alias {}", request.alias);
           return clientManager.getClient(connection.get());
        }

        public String getAlias() {
            return this.request.alias;
        }

        public String getLocation() {
            return this.request.location;
        }

        public Request getRequest() {
            return request;
        }
    }

    @Override
    public final byte[] marshalRequest(final RequisitionRequest request) {
        final var mapper = new XmlMapper();
        try {
            return mapper.writeValueAsBytes(request);
        } catch (final IOException e) {
            throw new RuntimeException(e);
        }
    }

    @Override
    public final RequisitionRequest unmarshalRequest(final byte[] bytes) {
        final var mapper = new XmlMapper();
        try {
            return mapper.readValue(bytes, RequisitionRequest.class);
        } catch (final IOException e) {
            throw new RuntimeException(e);
        }
    }

}
